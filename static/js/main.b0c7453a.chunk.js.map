{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","onClick","reset","randomId","uuidv4","this","className","styles","contactsForm","htmlFor","nameLabel","nameInput","onChange","type","id","pattern","title","required","numberLabel","numberInput","addingBatton","Component","Filter","filterLabel","filterInput","ContactList","contacts","onDeleteContact","console","log","contactList","map","contactListItem","contactListButton","Phonebook","filter","formSubmitHandler","data","handleBtnClick","find","item","toLowerCase","alert","contact","deleteContact","contactId","prevState","changeFilter","getFilteredItems","normalizedFilter","includes","localContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filteredContacts","container","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.b0c7453a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__1GPkI\",\"nameInput\":\"ContactForm_nameInput__1yxA2\",\"numberInput\":\"ContactForm_numberInput__CBZzH\",\"nameLabel\":\"ContactForm_nameLabel__1MRlw\",\"numberLabel\":\"ContactForm_numberLabel__2K0Y9\",\"addingBatton\":\"ContactForm_addingBatton__2JmAr\"};","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    // contacts: [],\n    name: \"\",\n    number: \"\",\n  };\n  // randomId = uuidv4();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.props.onClick(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const randomId = uuidv4();\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.contactsForm}>\n        <label htmlFor={randomId} className={styles.nameLabel}>\n          Name\n          <input\n            className={styles.nameInput}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            id={randomId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor={randomId} className={styles.numberLabel}>\n          Number\n          <input\n            className={styles.numberInput}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            id={randomId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button\n          onClick={this.handleSubmit}\n          type=\"button\"\n          className={styles.addingBatton}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.filterLabel}>\n    Find contacts by name\n    <input\n      className={styles.filterInput}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nexport default Filter;\n","import React from 'react';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    console.log(contacts);\n\n    return (\n        <ul className={styles.contactList}>\n            {contacts.map(({ id, name, number }) => (\n                <li\n                    className={styles.contactListItem}\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                >\n                    {name}\n                    {number}\n                    <button\n                        className={styles.contactListButton}\n                        type=\"button\"\n                        onClick={() => onDeleteContact(id)}\n                    >\n                        Delete\n                    </button>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport contacts from \"./contacts.json\";\nimport styles from \"./App.module.css\";\n\nclass Phonebook extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n\n  formSubmitHandler = (data) => {\n    // console.log(data);\n  };\n\n  handleBtnClick = ({ name, number }) => {\n    if (\n      this.state.contacts.find(\n        (item) => item.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      const contact = {\n        id: uuidv4(),\n        name: name,\n        number: number,\n      };\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n    // console.log(e);\n  };\n\n  getFilteredItems = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  componentDidMount() {\n    const localContacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(localContacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredItems();\n\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onClick={this.handleBtnClick}\n          onSubmit={this.formSubmitHandler}\n        />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contactListItem\":\"ContactList_contactListItem__1l6Fa\",\"contactListButton\":\"ContactList_contactListButton__3oi3v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1TeQb\",\"filterInput\":\"Filter_filterInput__u16Kg\"};"],"sourceRoot":""}